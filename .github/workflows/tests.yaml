name: Tests
on: [push, pull_request]
jobs:
  all:
    name: All
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install MOPAC
        run: |
          mkdir mopac
          echo mopac >>.git/info/exclude
          cd mopac
          wget -q $MOPAC_DOWNLOAD_URL $MOPAC_PASSWORD_URL
          unzip MOPAC2016_for_Linux_64_bit.zip
          cat >mopac <<EOF
          #!/bin/bash
          export LD_LIBRARY_PATH=$PWD
          export MOPAC_LICENSE=$PWD
          $PWD/MOPAC2016.exe "\$@"
          EOF
          chmod +x mopac MOPAC2016.exe
          echo $PWD >>$GITHUB_PATH
        env:
          MOPAC_PASSWORD_URL: ${{ secrets.MOPAC_PASSWORD_URL }}
          MOPAC_DOWNLOAD_URL: ${{ secrets.MOPAC_DOWNLOAD_URL }}
      - name: Create Python virtual environment
        run: |
          python -m venv venv
          echo VIRTUAL_ENV=$PWD/venv >>$GITHUB_ENV
          echo $PWD/venv/bin >>$GITHUB_PATH
          echo venv >>.git/info/exclude
      - name: Install dependencies
        run: pip install -U poetry-dynamic-versioning
      - uses: actions/cache@v2
        with:
          path: |
            ${{ env.VIRTUAL_ENV }}/bin
            ${{ env.VIRTUAL_ENV }}/lib/python${{ matrix.python-version }}/site-packages
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Build
        run: poetry build
      - name: Install
        run: pip install -U pyberny[test] --pre -f ./dist
      - name: Test
        run: coverage run -m pytest -v
      - name: Upload to Codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Uninstall
        run: pip uninstall -y pyberny
